blueprint:
  name: "üîî‚ÄÉNotification with Confirm, Dismiss and Timeout"
  description: >
    ### [üîó Github Link](https://github.com/samuelthng/t-house-blueprints/blob/main/notifications.yaml)

    [![Open your Home Assistant instance and show the blueprint import dialog with a specific blueprint pre-filled.](https://my.home-assistant.io/badges/blueprint_import.svg)](https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https%3A%2F%2Fgithub.com%2Fsamuelthng%2Ft-house-blueprints%2Fblob%2Fmain%2Fnotifications.yaml)


    ---

    ### Version: 1.2

    *Forked from Home Assistant's [Confirmable Notifications](https://github.com/home-assistant/core/blob/master/homeassistant/components/script/blueprints/confirmable_notification.yaml)*


    ---

    ## Features:
      - üì≤‚ÄÉSends a notification to a device with companion app installed.
      - ‚úÖ‚ÄÉConfirm button with custom label and actions
      - ‚ùå‚ÄÉDismiss button with custom label and actions
      - ‚åõÔ∏è‚ÄÉTimeout actions with custom duration, fired if no `confirm` or `dismiss` response received.
      - üßπ‚ÄÉDismiss notification if no response received after timeout duration.

    ---

    ## Example usage:
      When the last user leaves home, send a notification to last user:
      - Title: `My Awesome Home`
      - Message: `Turning off lights and appliances in 5 minutes`
      - Confirm Text: `Leave it on`
      - Confirm Action: `Do nothing`
      - Dismiss Text: `Turn off now`
      - Dismiss Action: `Run turn off script`
      - Timeout Duration: `5 minutes`
      - Timeout Action: `Run turn off script`
      - Clear on Timeout: `Clear Notification`

    ---

    ## Changelog

    ### Version 1.2 - *30 May 2023*
      - Added: `Icon` and `Icon color` (Android Only) - [Huge thanks to joe.cole1](https://community.home-assistant.io/t/notification-with-confirm-dismiss-and-timeout/551552/4)
      - Added: `Enable Timeout`, controls command response timeout feature - [Again, huge thanks to joe.cole1 for the insight](https://community.home-assistant.io/t/notification-with-confirm-dismiss-and-timeout/551552/12)

    ### Version 1.1 - *25 March 2023*
      - Updated: `Clear on Timeout` as boolean field
      - Fixed: `Persistent` notifications not working
      - Fixed: `Clear on Timeout` did not clear if a timeout happened
  domain: script
  source_url: https://github.com/samuelthng/t-house-blueprints/blob/main/notifications.yaml
  input:
    notify_device:
      name: "üì≤‚ÄÉDevice to notify"
      description: "Device needs to run the official Home Assistant app to receive notifications."
      selector:
        device:
          integration: mobile_app
    title:
      name: "üè∑Ô∏è‚ÄÉTitle"
      description: "The title of the button shown in the notification."
      default: ""
      selector:
        text:
    message:
      name: "üí¨‚ÄÉMessage"
      description: "The message body"
      selector:
        text:
    icon:
      name: "üôÇ‚ÄÉIcon (Android Only)"
      default: ""
      selector:
        icon:
    icon_color:
      name: "üé®‚ÄÉIcon Color (Android Only, hex or color name)"
      default: ""
      selector:
        text:
    confirm_text:
      name: "‚úÖ‚ÄÉConfirmation Text"
      description: "Text to show on the confirmation button"
      default: "Confirm"
      selector:
        text:
    confirm_action:
      name: "‚úÖ‚ÄÉConfirmation Action"
      description: "Action to run when notification is confirmed"
      default: []
      selector:
        action:
    dismiss_text:
      name: "‚ùå‚ÄÉDismiss Text"
      description: "Text to show on the dismiss button"
      default: "Dismiss"
      selector:
        text:
    dismiss_action:
      name: "‚ùå‚ÄÉDismiss Action"
      description: "Action to run when notification is dismissed"
      default: []
      selector:
        action:
    enable_timeout:
      name: "‚åõÔ∏è‚ÄÉEnable Timeout"
      description: "Note: If disabled, script will wait for response indefinitely until next trigger."
      default: true # Default `true` for backward compatibility.
      selector:
        boolean:
    timeout:
      name: "‚åõÔ∏è‚ÄÉTimeout Duration"
      description: "Amount of time to wait for a confirm/dismiss response before firing timeout action."
      selector:
        duration:
          enable_day: false
    timeout_action:
      name: "‚åõÔ∏è‚ÄÉTimeout Action"
      description: "Action to run when notification response is timed out."
      default: []
      selector:
        action:
    tag:
      name: "üîñ‚ÄÉTag"
      description: "Used for unique identification of the notification."
      selector:
        text:
    clear_on_timeout:
      name: "üßπ‚ÄÉClear notification on timeout - ‚ö†Ô∏è Tag Required"
      description: "Dismiss the notification after action selection times out."
      default: "leave_notification"
      selector:
        boolean:
    persist:
      name: "üö©‚ÄÉ(Android Only) Persistent Notification - ‚ö†Ô∏è Tag Required"
      description: "Ensures that notification cannot be dismissed by swiping away."
      default: false
      selector:
        boolean:
    channel:
      name: "(Android Only) Notification Channel"
      description: "Defines the channel, to be used with Importance. Relates to the importance of the notification."
      default: "General"
      selector:
        text:
    importance:
      name: "‚ùï‚ÄÉ(Android Only) Notification Channel Importance"
      description: https://companion.home-assistant.io/docs/notifications/notifications-basic/#notification-channel-importance
      default: default
      selector:
        select:
          options:
            - label: "Urgent (Makes a sound with heads-up notification)"
              value: high
            - label: "Default (Makes a sound)"
              value: default
            - label: "Silent (Makes no sound)"
              value: low
            - label: "Low (Makes no sound, doesn't appear in status bar)"
              value: min
    interruption_level:
      name: "‚ùï‚ÄÉ(iOS Only) Interruption Level"
      description: https://companion.home-assistant.io/docs/notifications/notifications-basic/#interruption-level
      default: active
      selector:
        select:
          options:
            - label: "Silent (Makes no sound, does not wake screen)"
              value: passive
            - label: "Default"
              value: active
            - label: "Important (Overrides Focus)"
              value: time-sensitive
            - label: "Critical (Overrides Focus and Mute, restricted features)"
              value: critical

mode: restart

sequence:
  - alias: "Set up variables"
    variables:
      action_confirm: "{{ 'CONFIRM_' ~ context.id }}"
      action_dismiss: "{{ 'DISMISS_' ~ context.id }}"
      enable_timeout: !input enable_timeout
      clear_on_timeout: !input clear_on_timeout
      persist: !input persist
  - alias: "Send notification"
    domain: mobile_app
    type: notify
    device_id: !input notify_device
    title: !input title
    message: !input message
    data:
      actions:
        - action: "{{ action_confirm }}"
          title: !input confirm_text
        - action: "{{ action_dismiss }}"
          title: !input dismiss_text
      tag: !input tag
      persistent: !input persist
      channel: !input channel
      importance: !input importance
      push:
        interruption-level: !input interruption_level
      notification_icon: !input icon
      color: !input icon_color
  - if:
      - alias: "Check timeout enabled"
        condition: template
        value_template: "{{ enable_timeout == true }}"
    then:
      - alias: "Awaiting response with Timeout"
        wait_for_trigger:
          - platform: event
            event_type: mobile_app_notification_action
            event_data:
              action: "{{ action_confirm }}"
          - platform: event
            event_type: mobile_app_notification_action
            event_data:
              action: "{{ action_dismiss }}"
        timeout: !input timeout
        continue_on_timeout: true
    else:
      - alias: "Awaiting response indefinitely"
        wait_for_trigger:
          - platform: event
            event_type: mobile_app_notification_action
            event_data:
              action: "{{ action_confirm }}"
          - platform: event
            event_type: mobile_app_notification_action
            event_data:
              action: "{{ action_dismiss }}"
  - choose:
      - conditions: "{{ wait.trigger.event.data.action == action_confirm }}"
        sequence: !input confirm_action
      - conditions: "{{ wait.trigger.event.data.action == action_dismiss }}"
        sequence: !input dismiss_action
      - conditions: "{{ wait.trigger == none }}"
        sequence: !input timeout_action
  - if:
      - alias: "Clear Notification Enabled"
        condition: template
        value_template: "{{ clear_on_timeout == true }}"
    then:
      - alias: "Send clear notification command"
        domain: mobile_app
        type: notify
        device_id: !input notify_device
        message: "clear_notification"
        data:
          tag: !input tag
